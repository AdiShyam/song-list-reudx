{"version":3,"sources":["components/SongList.jsx","actions/index.js","components/SongDetail.jsx","components/App.js","reducers/index.js","index.js"],"names":["SongList","this","props","songs","map","song","className","key","title","onClick","selectSong","console","log","renderList","React","Component","connect","state","type","payload","selectedSong","duration","App","combineReducers","action","store","createStore","reducers","ReactDOM","render","document","getElementById"],"mappings":"+OAIMA,E,qLACU,IAAD,OACX,OAAOC,KAAKC,MAAMC,MAAMC,IAAI,SAAAC,GAC1B,OACE,yBAAKC,UAAU,OAAOC,IAAKF,EAAKG,OAC9B,yBAAKF,UAAU,yBACb,4BAAQA,UAAU,oBAAoBG,QAAS,kBAAM,EAAKP,MAAMQ,WAAWL,KAA3E,WAIF,yBAAKC,UAAU,WAAWD,EAAKG,Y,+BASrC,OAFFG,QAAQC,IAAIX,KAAKC,OAER,yBAAKI,UAAU,mBAAmBL,KAAKY,kB,GAnB3BC,IAAMC,WA4BdC,cALS,SAAAC,GAEtB,OADEN,QAAQC,IAAI,mBAAmBK,GAC1B,CAAEd,MAAOc,EAAMd,QAKpB,CAAEO,WCjCoB,SAAAL,GACtB,MAAO,CACHa,KAAM,gBACNC,QAASd,KD4BFW,CAGbhB,GEQagB,cARS,SAAAC,GACtB,MAAO,CAAEZ,KAAMY,EAAMG,eAORJ,CApBI,SAAC,GAAc,IAAZX,EAAW,EAAXA,KAEpB,OADAM,QAAQC,IAAI,2BAA4BP,GACnCA,EAEH,6BACE,6CACA,yBAAKC,UAAU,SAAf,UAA+BD,EAAKG,OACpC,4CAAkBH,EAAKgB,SAAvB,SALc,yECNLC,MAff,WACE,OACE,yBAAKhB,UAAU,qBACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,qBACb,kBAAC,EAAD,OAEF,yBAAKA,UAAU,qBACb,kBAAC,EAAD,U,OCOKiB,cAAiB,CAC5BpB,MAnBiB,WACjB,MAAO,CACH,CAACK,MAAO,eAAgBa,SAAU,QAClC,CAACb,MAAO,cAAgBa,SAAU,QAClC,CAACb,MAAO,mBAAoBa,SAAU,QACtC,CAACb,MAAO,aAAea,SAAU,UAerCD,aAXwB,WAAkC,IAAjCA,EAAgC,uDAAjB,KAAMI,EAAW,uCACzD,OAAOA,EAAON,MACV,IAAK,gBACD,OAAOM,EAAOL,QAElB,QAAS,OAAOC,MCPlBK,EAAQC,YAAYC,GAE1BC,IAASC,OACP,kBAAC,IAAD,CAAUJ,MAAOA,GACf,kBAAC,EAAD,OAEFK,SAASC,eAAe,W","file":"static/js/main.dff3bf6f.chunk.js","sourcesContent":["import { connect } from \"react-redux\";\r\nimport { selectSong } from '../actions';\r\nimport React from \"react\";\r\n\r\nclass SongList extends React.Component {\r\n  renderList() {\r\n    return this.props.songs.map(song => {\r\n      return (\r\n        <div className=\"item\" key={song.title}>\r\n          <div className=\"right floated content\">\r\n            <button className=\"ui button primary\" onClick={() => this.props.selectSong(song)}>\r\n                Select\r\n            </button>\r\n          </div>\r\n          <div className=\"content\">{song.title}</div>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n  console.log(this.props);\r\n\r\n    return <div className=\"ui divided list\">{this.renderList()}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    console.log(\"the songList is \",state)\r\n  return { songs: state.songs };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { selectSong }\r\n)(SongList);\r\n","// Action creator\r\nexport const selectSong = song => {\r\n    return {\r\n        type: 'SONG_SELECTED',\r\n        payload: song\r\n    };\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// class SongDetail extends React.Component {\r\n//   render() {\r\n//     return (\r\n//       <div>\r\n//         <div>Song Name:</div>\r\n//         <div>Song Name:</div>\r\n//         {/* <div\r\n//           onClick={() => {\r\n//             // selectedSongReducer(this.props.song, { type: \"SONG_SELECTED\" });\r\n//             this.setState({selecteSong : this.props.song});\r\n//             console.log(\"selected song is \", this.props.song);\r\n//           }}\r\n//         >\r\n//           Select\r\n//         </div> */}\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\nconst SongDetail = ({ song }) => {\r\n  console.log(\"the props of song detail\", song);\r\n  if (!song) return <div>select a song to display the contents </div>;\r\n  return (\r\n    <div>\r\n      <h3> Details for:</h3>\r\n      <div className=\"title\">Title: {song.title}</div>\r\n      <div>Duration is {song.duration} min</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return { song: state.selectedSong };\r\n};\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//   selecteSong: song => dispatch(SelectSong(song))\r\n// });\r\n\r\nexport default connect(mapStateToProps)(SongDetail);\r\n","import React from \"react\";\nimport SongList from \"./SongList\";\nimport SongDetail from \"./SongDetail\";\n\nfunction App() {\n  return (\n    <div className=\"ui contained grid\">\n      <div className=\"ui row\">\n        <div className=\"column eight wide\">\n          <SongList />\n        </div>\n        <div className=\"column eight wide\">\n          <SongDetail />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\r\nconst songsReducer = () => {\r\n    return [\r\n        {title: 'Check it out', duration: '4.05'},\r\n        {title: 'Let\\'s do it', duration: '5.25'},\r\n        {title: 'I will be there ', duration: '3.56'},\r\n        {title: 'Who\\'s that', duration: '8.22'},\r\n    ];\r\n};\r\n\r\nconst selectedSongReducer = (selectedSong = null, action) => {\r\n    switch(action.type) {\r\n        case 'SONG_SELECTED':\r\n            return action.payload;\r\n        \r\n        default: return selectedSong;\r\n    }\r\n}\r\n\r\nexport default combineReducers( {\r\n    songs: songsReducer,\r\n    selectedSong: selectedSongReducer\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\n\nimport reducers from \"./reducers\";\n\nconst store = createStore(reducers);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}